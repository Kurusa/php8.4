<?php
/**
 * Разом з новими функціями, також набули чинності кілька застарілих типів, зокрема неявні типи, що допускають значення NULL,
 * застарілі сесії GET/POST та кілька інших змін.
 *
 * Неявні типи, що допускають значення null
 *
 * До того, як типи, що допускають значення nullable, були офіційно представлені, вони були можливими
 * шляхом оголошення значення зі значенням за замовчуванням "null":
 */
function foo(T1 $a, T2 $b = null, T3 $c)
{
}

/**
 * Пізніше, коли були додані типи, що допускають значення NULL, цей приклад також можна було досягти явно:
 */
function bar(T1 $a, ?T2 $b = null, T3 $c)
{
}

/**
 * Або через тип об'єднання:
 */
function test(T1 $a, T2|null $b = null, T3 $c)
{
}

/**
 * Тим часом неявна декларація продовжувала працювати.
 *
 * Починаючи з PHP 8.4, ця неявна декларація тепер застаріла, і користувачам пропонується використовувати явний тип,
 * що допускає значення null, або оголосити тип об’єднання, який містить null.
 *
 * Припинення підтримки сесії GET/POST
 *
 * У додатках з відстеження стану користувача (наприклад, авторизації), часто використовуються сесії.
 * Найпоширеніший і безпечний спосіб це зробити — використовувати файли cookie для зберігання ідентифікатора сеансу.
 * Однак, раніше PHP також дозволяв передавати ідентифікатор сеансу через параметри GET або POST.
 *
 * Ця можливість існувала з ранніх версій PHP, коли браузери ще не мали повної підтримки файлів cookie. Для забезпечення
 * сумісності PHP ввів механізм під назвою session.use_trans_sid, який автоматично додавав ідентифікатор сеансу до
 * URL-адрес або до даних форм (POST), якщо файли cookie не могли бути використані.
 *
 * З часом використання GET/POST для передачі ідентифікаторів сеансу стало застарілою практикою з наступних причин:
 * - Ідентифікатори сеансу у URL-адресах або формах можуть бути легко перехоплені, наприклад,
 *      через журнал доступу до сервера або загальнодоступні посилання.
 * - Сучасні браузери повністю підтримують файли cookie, роблячи передачу сеансів через GET/POST непотрібною.
 *
 * У PHP 8.4 відбулися такі зміни:
 * - Параметр session.use_only_cookies, який обмежує використання лише файлів cookie для ідентифікації сеансів,
 *      тепер увімкнено за замовчуванням.
 * - Параметр session.use_trans_sid, що дозволяв передачу ідентифікаторів сеансу через GET/POST, вимкнено за замовчуванням.
 *
 * Якщо ці параметри змінені (тобто session.use_only_cookies вимкнено або session.use_trans_sid увімкнено),
 * PHP 8.4 видасть deprecation warning.
 *
 * У майбутньому (PHP 9), ці параметри будуть повністю видалені з мови і
 * єдиним способом роботи з ідентифікаторами сеансу залишиться використання файлів cookie.
 *
 * Інші обмеження: https://wiki.php.net/rfc/deprecations_php_8_4
 */
